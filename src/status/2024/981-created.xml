<item>
   <title>Issue #981 created</title>
   <pubDate>2024-01-31T00:34:34Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/981</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-981</guid>
   <description>&lt;div&gt;&lt;p&gt;Identify optional arguments in callback functions&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;It was pointed out today that is not obvious, looking at a function signature like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fn:filter(
  $input as item()*, |  
  $predicate as function(item(), xs:integer) as xs:boolean |  
) as item()*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;that the second argument of the &lt;code&gt;$predicate&lt;/code&gt; function is optional.&lt;/p&gt;
&lt;p&gt;At least in the documentation, it would be useful to capture this in some way. Being "optional" here means that it makes sense, semantically, to supply an arity-1 function, in which case the caller will not supply the second argument.&lt;/p&gt;
&lt;p&gt;Perhaps it would also be useful to go beyond documentation, and attach some syntax and semantics to it. Specifically, if the signature of the callback function indicates that the first N arguments are required, then supplying a function item of arity less than N will result in a type error.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
