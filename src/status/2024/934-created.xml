<item>
   <title>Issue #934 created</title>
   <pubDate>2024-01-08T18:00:09Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/934</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-934</guid>
   <description>&lt;div&gt;&lt;p&gt;String comparison in deep-equal&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The code showing how strings should be compared in deep-equal has gone awry, it doesn't match the prose. In equal-strings(), the lines&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let $n1 := if ($options?whitespace = "normalize"))
             then normalize-unicode(?, $options?normalization-form) 
             else identity#1
  let $n2 := if ($options?normalize-space)
             then normalize-space#1 
             else identity#1      
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;should read:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let $n1 := if ($options?whitespace = 'normalize')
             then normalize-space#1 
             else identity#1    
let $n2 := if ($options?normalization-form))
             then normalize-unicode(?, $options?normalization-form) 
             else identity#1
  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Actually, the whole thing can now be expressed more concisely using fn:chain:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;declare function equal-strings(
  $string1   as xs:string,
  $string2   as xs:string, 
  $collation as xs:string,
  $options   as map(*)
) as xs:boolean {
  let $norm := fn:chain(?,
                        (normalize-unicode(?, $options?normalization-form)[$options?whitespace = "normalize"],
                         normalize-space#1[$options?normalize-space]))          
  return compare($norm($string1), $norm($string2), $collation) eq 0    
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
