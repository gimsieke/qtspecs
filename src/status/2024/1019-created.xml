<item>
   <title>Issue #1019 created</title>
   <pubDate>2024-02-11T15:23:07Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1019</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1019</guid>
   <description>&lt;div&gt;&lt;p&gt;XQFO: Unknown option parameters&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The current &lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#option-parameter-conventions"&gt;option parameter conventions&lt;/a&gt; are:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start="4"&gt;
&lt;li&gt;It is not an error if the options map contains options with names other than those described in this specification. Implementations MAY attach an 路implementation-defined路 meaning to such entries, and MAY define errors that arise if such entries are present with invalid values. Implementations MUST ignore such entries unless they have a specific 路implementation-defined路 meaning. Implementations that define additional options in this way SHOULD use values of type &lt;code&gt;xs:QName&lt;/code&gt; as the option names, using an appropriate namespace.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;The obvious consequence is that wrongly typed or unsupported options are not reported as such:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;serialize($node, map { 'format': 'html' })
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I think we should still allow proprietary options, but raise errors when an option is neither defined in the specification nor supported by the given implementation. On the one hand, this will help users to spot typos (e.g., &lt;code&gt;byte-order-mask&lt;/code&gt; or instead of &lt;code&gt;byte-order-mark&lt;/code&gt;). On the other hand, options that are supported by one implementation will be rejected, which feels reasonable to me, as options usually change either the result, or the way how the input is treated.&lt;/p&gt;
&lt;p&gt;If we believe that this change is too disruptive, we could tolerate entries with &lt;code&gt;xs:QName&lt;/code&gt; keys.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
