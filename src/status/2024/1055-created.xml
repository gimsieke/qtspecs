<item>
   <title>Issue #1055 created</title>
   <pubDate>2024-03-01T13:20:51Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1055</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1055</guid>
   <description>&lt;div&gt;&lt;p&gt;simplifying the language - attempt 2&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I've thought about it.&lt;/p&gt;
&lt;p&gt;The key issue I had which genuinely caused me years of confusion (I didnt understand it so I ignored it, and dealt with it by typeing random xslt code)....this....&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;            &amp;lt;xsl:variable name="presentationMediaElement" as="element(urn:presentationMedia)"&amp;gt;
                &amp;lt;presentationMedia/&amp;gt;
            &amp;lt;/xsl:variable&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if I don't declare the "as" then it does something different and confusing (it assumes its a document element &lt;strong&gt;I think&lt;/strong&gt;, though I NEVER want it to do this).&lt;/p&gt;
&lt;p&gt;so for stylesheets declared as version "4.0"+, can we make the default interpretation of that its an element?&lt;/p&gt;
&lt;p&gt;Does this breaks backwards compatability with v1? tbh, the code is already incompatible because the equivalent 1.0 code requires &lt;code&gt;node-set&lt;/code&gt;, its already broken, so I suggest making the fix simple to understand.&lt;/p&gt;
&lt;p&gt;why is this so irksome to me?
because for me its &lt;strong&gt;incredibly&lt;/strong&gt; confusing&lt;/p&gt;
&lt;p&gt;its confusing because (and i didnt express this well the last time), it makes a type declaration have inconsistent behaviours.&lt;/p&gt;
&lt;p&gt;In languages with OO (is it reynolds?) type systems this also happens  BUT in an OO type system an expression has a type than can be cast to a &lt;strong&gt;subtype&lt;/strong&gt; and a subtype is very special because everything that is true of the supertype (in the constained type logic) is true of the subtype (you can express this in terms of set/class membership in a universe if thats how you think about these things).&lt;/p&gt;
&lt;p&gt;but in this case, this isnt the case....the two interpretations are disjoint, this isnt a cast.&lt;/p&gt;
&lt;p&gt;So the concrete proposal is uniquely define the semantics of.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;             &amp;lt;xsl:variable name="presentationMediaElement"&amp;gt;
                &amp;lt;presentationMedia/&amp;gt;
            &amp;lt;/xsl:variable&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to be&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;            &amp;lt;xsl:variable name="presentationMediaElement" as="element(urn:presentationMedia)"&amp;gt;
                &amp;lt;presentationMedia/&amp;gt;
            &amp;lt;/xsl:variable&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;from 4.0 onwards.&lt;/p&gt;
&lt;p&gt;(ironically, personally i will probably still put the "as" clause in, but if i were trying to learn the language today I'd understand this on day 1, not day 1000).&lt;/p&gt;
&lt;p&gt;P.S.&lt;/p&gt;
&lt;p&gt;I have a suspicion I still dont fully understand it, but i'm sure someone will point that out in due course.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
