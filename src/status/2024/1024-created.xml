<item>
   <title>Issue #1024 created</title>
   <pubDate>2024-02-13T21:10:56Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1024</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1024</guid>
   <description>&lt;div&gt;&lt;p&gt;Precedence of `otherwise` operator&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I made a mistake when specifying subsequence-where, caused by misunderstanding the precedence of the &lt;code&gt;otherwise&lt;/code&gt; operator: see issue #1001.&lt;/p&gt;
&lt;p&gt;In the expression&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let $start := index-where($input, $from)[1] 
              otherwise count($input) + 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I failed to realise that &lt;code&gt;otherwise&lt;/code&gt; binds more tightly than &lt;code&gt;+&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I'm opening the issue to solicit views as to whether we have got this right.&lt;/p&gt;
&lt;p&gt;One might take the view that the closest thing to &lt;code&gt;otherwise&lt;/code&gt; in other familiar language is the ternary conditional operator, which has lower precedence than anything else including &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt;; but then, its first operand is a boolean expression while it's relatively unlikely that the operands of &lt;code&gt;otherwise&lt;/code&gt; will be boolean. I'm therefore thinking that it might be best to put it between 'eq' and '||`, so&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$a eq $b otherwise $c || $d&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;parses as&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$a eq ($b otherwise ($c || $d))&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
