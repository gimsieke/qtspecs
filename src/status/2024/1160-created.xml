<item>
   <title>Issue #1160 created</title>
   <pubDate>2024-04-16T17:38:11Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1160</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1160</guid>
   <description>&lt;div&gt;&lt;p&gt;fn:is-collation-available&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The new function &lt;strong&gt;&lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#func-collation"&gt;fn:collation&lt;/a&gt;&lt;/strong&gt; raises an error [&lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#ERRFOCH0002"&gt;err:FOCH0002&lt;/a&gt;]  in the case when the requested collation is not supported. Or, if the &lt;code&gt;fallback&lt;/code&gt; key's value is &lt;code&gt;true()&lt;/code&gt;, then the implementation chooses "the most similar supported collation" - which could be perceived as arbitrary and unexpected by the code developer.&lt;/p&gt;
&lt;p&gt;This might be OK if the language has try/catch capabilities and &lt;code&gt;fallback="no"&lt;/code&gt;  is specified, but may not be the best outcome in a pure XPath evaluation.&lt;/p&gt;
&lt;p&gt;A solution to this problem is to provide a function &lt;strong&gt;fn:is-collation-available&lt;/strong&gt; that accepts the same argument (&lt;code&gt;$options&lt;/code&gt; map) as &lt;code&gt;fn:collation&lt;/code&gt;, and also could accept a string argument whose value is the URI of the collation. This function produces a boolean, &lt;code&gt;true()&lt;/code&gt; meaning that the collation is available and can be constructed and used, &lt;code&gt;false()&lt;/code&gt; - otherwise.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Signature&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fn:is-collation-available( $descriptor  as xs:string | map(*)  ) as xs:boolean&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
