<item>
   <title>Issue #938 created</title>
   <pubDate>2024-01-10T04:30:09Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/938</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-938</guid>
   <description>&lt;div&gt;&lt;p&gt;Canonical serialization&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;This issue picks up suggestions from #779 regarding canonical serialization, and solicits from the community group input on if such a function is desirable, and what such a function might look like.&lt;/p&gt;
&lt;p&gt;In the context of #779, the idea was that two XML documents with different physical representations, but semantically equivalent, could be serialized to a canonical form, with a hash value applied to each confirming identity. Of course, with canonical operation, a simple string comparison would be sufficient, absent any hashing.&lt;/p&gt;
&lt;p&gt;XML Signature was suggested as one approach, with some hesitation. I would like to suggest, instead, that we look to implement &lt;a href="https://www.w3.org/TR/xml-c14n/"&gt;Canonical XML Version 1.1&lt;/a&gt; (herein &lt;strong&gt;CX1.1&lt;/strong&gt;), perhaps with map options that calibrate how CX1.1 is implemented. I have no experience using CX1.1, so user input is welcome.&lt;/p&gt;
&lt;p&gt;Another point of discussion is whether this merits a new function, e.g., &lt;code&gt;fn:canonical-serialize&lt;/code&gt;, or should be built upon &lt;code&gt;fn:serialize&lt;/code&gt;. A problem with the latter option, is that such an approach makes no sense without the &lt;code&gt;method&lt;/code&gt; option specified as &lt;code&gt;xml&lt;/code&gt;. Another approach would be to go deeper, into the serialization spec, and expand the &lt;code&gt;xml&lt;/code&gt; method to ensure a canonical option.&lt;/p&gt;
&lt;p&gt;I believe that this function would be extremely useful. When preparing test suites, output could be saved as secondary documents as canonical XML, and any subsequent regression tests could adjust comparanda to canonical XML, and very precise node-wise comparisons could be made.&lt;/p&gt;
&lt;p&gt;I look forward to everyone's input.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
