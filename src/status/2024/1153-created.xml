<item>
   <title>Issue #1153 created</title>
   <pubDate>2024-04-14T15:05:04Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1153</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1153</guid>
   <description>&lt;div&gt;&lt;p&gt;XSLT: debugging template rule selection&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The biggest headache when debugging XSLT stylesheets is working out which template rules have been invoked in response to an &lt;code&gt;xsl:apply-templates&lt;/code&gt; instruction (I'm hitting this frustration right now with the qtspecs build stylesheets...). The &lt;code&gt;xsl:message&lt;/code&gt; instruction is unhelpful here, because if the "wrong" template rule is firing, you don't know where to add the message. And the only other standardised debugging aids are &lt;code&gt;fn:trace()&lt;/code&gt; and &lt;code&gt;xsl:assert&lt;/code&gt;, which don't help either.&lt;/p&gt;
&lt;p&gt;I propose an attribute on &lt;code&gt;xsl:apply-templates&lt;/code&gt;, &lt;code&gt;xsl:apply-imports&lt;/code&gt;, and &lt;code&gt;xsl:next-match&lt;/code&gt;: trace=yes|no. If enabled, execution of the instruction causes a message to be output (as if by xsl:message) identifying the rule that is invoked, in an implementation-defined way. In the case that a built-in template rule is invoked, the message should indicate this, and any implicit apply-templates performed by the built-in rule should be evaluated as if it specified trace="yes". It is "recommended" that the message output should identify the stylesheet module, line number, match pattern, and mode, if the information is available, and should also include a representation of the item that is being processed by the instruction, for example the node kind and name.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
