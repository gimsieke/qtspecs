<item>
   <title>Issue #1175 created</title>
   <pubDate>2024-04-25T18:18:44Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1175</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1175</guid>
   <description>&lt;div&gt;&lt;p&gt;XPath: Optional parameters in the definition of an inline function&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;This is a proposal to extend the definition of an inline-function item with the ability to specify a set of optional/keyword-value parameters, following the sequence of positional parameters of the function.&lt;/p&gt;
&lt;p&gt;This is very similar to what we already have for static function definitions: https://qt4cg.org/specifications/xquery-40/xpath-40.html#dt-function-definition and https://qt4cg.org/specifications/xquery-40/xpath-40.html#id-static-functions&lt;/p&gt;
&lt;p&gt;While a &lt;strong&gt;static function definition&lt;/strong&gt; has the following parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The function name, which is an &lt;a href="https://qt4cg.org/specifications/xquery-40/xpath-40.html#dt-expanded-qname"&gt;expanded QName&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A (possibly empty) list of required parameters, each having:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a parameter name (an &lt;a href="https://qt4cg.org/specifications/xquery-40/xpath-40.html#dt-expanded-qname"&gt;expanded QName&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a required type (a &lt;a href="https://qt4cg.org/specifications/xquery-40/xpath-40.html#dt-sequence-type"&gt;sequence type&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A (possibly empty) list of optional parameters, each having:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a parameter name (an &lt;a href="https://qt4cg.org/specifications/xquery-40/xpath-40.html#dt-expanded-qname"&gt;expanded QName&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a required type (a &lt;a href="https://qt4cg.org/specifications/xquery-40/xpath-40.html#dt-sequence-type"&gt;sequence type&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a default value expression (an expression: see &lt;a href="https://qt4cg.org/specifications/xquery-40/xpath-40.html#id-expressions"&gt;4 Expressions&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A return type (a &lt;a href="https://qt4cg.org/specifications/xquery-40/xpath-40.html#dt-sequence-type"&gt;sequence type&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A (possibly empty) set of function annotations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A body. The function body contains the logic that enables the function result to be computed from the supplied arguments and information in the static and dynamic context.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For an &lt;strong&gt;inline function definition&lt;/strong&gt; we will have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A name of a variable to contain the function item being defined.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A (possibly empty) list of required parameters, each having:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a parameter name (an &lt;a href="https://qt4cg.org/specifications/xquery-40/xpath-40.html#dt-expanded-qname"&gt;expanded QName&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;an optional type (a &lt;a href="https://qt4cg.org/specifications/xquery-40/xpath-40.html#dt-sequence-type"&gt;sequence type&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A (possibly empty) list of optional parameters, each having:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a parameter name (an &lt;a href="https://qt4cg.org/specifications/xquery-40/xpath-40.html#dt-expanded-qname"&gt;expanded QName&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;an optional type (a &lt;a href="https://qt4cg.org/specifications/xquery-40/xpath-40.html#dt-sequence-type"&gt;sequence type&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a default value expression (an expression: see &lt;a href="https://qt4cg.org/specifications/xquery-40/xpath-40.html#id-expressions"&gt;4 Expressions&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An optional return type (a &lt;a href="https://qt4cg.org/specifications/xquery-40/xpath-40.html#dt-sequence-type"&gt;sequence type&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A body. The function body contains the logic that enables the function result to be computed from the supplied arguments and information in the static and dynamic context.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;What is accomplished by introducing optional parameters&lt;/strong&gt;?&lt;/p&gt;
&lt;p&gt;The answer is the same as for the effect of having optional parameters in a static function definition: increased &lt;strong&gt;&lt;em&gt;brevity&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;conciseness&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;clarity&lt;/em&gt;&lt;/strong&gt; .&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xq"&gt;let $myFun := fn($pos1, $pos2, $posK, $kw1 := expr1, $kw2 := expr2, ...,  $kwN := exprN) { (: Some expression :)} 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;replaces what would otherwise be a set of &lt;code&gt;N! + 1&lt;/code&gt; separate inline function definitions, each of which must be assigned to a separate variable.&lt;/p&gt;
&lt;p&gt;Similarly to the static function calls, with this new feature a call to such an inline function must provide values for all positional arguments, followed by an optional set (meaning in any order) of assignments of values to specific keyword-valued (optional) arguments. The rules for an inline function call are similar to those for a call to a static function - the provided values for the positional arguments must precede all other provided values and the values for the optional arguments may be provided in any order.&lt;/p&gt;
&lt;p&gt;Here is a short example of an inline function definition and calling it:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xq"&gt;let $incr := fn($arg1, $increment := 1) {$arg1 + $increment }
 return
  (
   $incr(5),
   $incr(5, increment := 2),
   $incr(5, increment := 3)
 )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;produces:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;6, 7, 8&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
