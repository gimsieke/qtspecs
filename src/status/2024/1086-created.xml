<item>
   <title>Issue #1086 created</title>
   <pubDate>2024-03-15T10:40:22Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1086</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1086</guid>
   <description>&lt;div&gt;&lt;p&gt;array:values spec cleanup&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The rules for array:values say:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The function concatenates the members of $array and returns them as a sequence. The values are returned in their original order. Arrays contained within members are returned unchanged.&lt;/p&gt;
&lt;p&gt;The effect of the function is equivalent to $array?*.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is all a bit too vague.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the values are not concatenated, at least not in the sense of concat()&lt;/li&gt;
&lt;li&gt;it doesn't return the members, it returns their sequence concatenation&lt;/li&gt;
&lt;li&gt;the phrase "arrays contained within members" is unclear. The examples reveal that this rule is intended to include arrays that ARE members.&lt;/li&gt;
&lt;li&gt;the equivalent expression &lt;code&gt;$array?*&lt;/code&gt; allows $array to be things that &lt;code&gt;array:values()&lt;/code&gt; doesn't allow (like an empty sequence).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More subtly, the introduction to section 19.1 says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All functionality on arrays is defined in terms of two primitives:&lt;/p&gt;
&lt;p&gt;The function [array:members] decomposes an array to a sequence of value records.
The function [array:of-members] composes an array from a sequence of value records.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and the spec for array:values doesn't conform to this guideline.&lt;/p&gt;
&lt;p&gt;Try:&lt;/p&gt;
&lt;p&gt;The function returns the sequence-concatenation of the members of $array, retaining order. More formally, the effect of the function is equivalent to the expression &lt;code&gt;array:members($array)?value&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;and add to the notes:&lt;/p&gt;
&lt;p&gt;Unlike array:flatten, the function does not apply recursively to nested arrays.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
