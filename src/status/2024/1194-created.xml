<item>
   <title>Issue #1194 created</title>
   <pubDate>2024-05-08T09:10:27Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1194</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1194</guid>
   <description>&lt;div&gt;&lt;p&gt;New function fn:query()&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I propose a new function &lt;code&gt;fn:query()&lt;/code&gt; to perform dynamic XQuery/XPath evaluation: a similar role to fn:transform() and xsl:evaluate.&lt;/p&gt;
&lt;p&gt;I propose a design based on the design of fn:invisible-xml() - fn:query should take a query string as its argument, and return a function item that can be called to evaluate the query.&lt;/p&gt;
&lt;p&gt;The fn:query() function will need an options map to supply significant aspects of the static context, for example the base URI. But I don't think we need to support everything. Public functions in the calling module should probably be made available automatically, in which case we don't need to support "import module".&lt;/p&gt;
&lt;p&gt;The dynamic evaluation function will need an options map to supply significant aspects of the dynamic context, notably the context value and values of external parameters. The query result should be returned in "raw" (ie. unserialized) form.&lt;/p&gt;
&lt;p&gt;Perhaps there should be an option language="xpath" to say that the "query" is actually an XPath expression; some implementations might find that easier to support, especially when the processor is itself an XPath processor.&lt;/p&gt;
&lt;p&gt;(Motivation: Saxon has a pair of ancient extension functions &lt;code&gt;saxon:compile-query&lt;/code&gt; and &lt;code&gt;saxon:query&lt;/code&gt; and the design needs modernising, and bridging across to additional platforms. We might as well get it into the standard if we're doing that.)&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
