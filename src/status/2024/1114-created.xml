<item>
   <title>Issue #1114 created</title>
   <pubDate>2024-03-25T13:32:43Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1114</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1114</guid>
   <description>&lt;div&gt;&lt;p&gt;Partial function application: Keywords and placeholders&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The test suite contains test cases – &lt;a href="https://github.com/qt4cg/qt4tests/blob/e633f879db71b4bac91ac304fa13fd28619d0e1b/prod/FunctionCall.xml#L1178-L1240"&gt;FunctionCall-414 … FunctionCall-417&lt;/a&gt; – for partially applied functions with keywords and placeholders:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;test-case name="FunctionCall-414" covers-40="keywords"&amp;gt;
  &amp;lt;description&amp;gt;Use of keyword arguments with placeholders on user-defined function&amp;lt;/description&amp;gt;
  &amp;lt;created by="Michael Kay" on="2023-03-13"/&amp;gt;
  &amp;lt;modified by="Michael Kay" on="2023-12-13" change="do what the description says"/&amp;gt;
  &amp;lt;dependency type="spec" value="XQ40+"/&amp;gt;
  &amp;lt;test&amp;gt;&amp;lt;![CDATA[
     declare function local:diff ($s as xs:integer, $t as xs:integer) as xs:integer { 
        $s - $t
     };  
     local:diff(s := 12, t := ?)(8)
  ]]&amp;gt;&amp;lt;/test&amp;gt;
  &amp;lt;result&amp;gt;
    &amp;lt;assert-eq&amp;gt;4&amp;lt;/assert-eq&amp;gt;
  &amp;lt;/result&amp;gt;
&amp;lt;/test-case&amp;gt;
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I didn’t find information on this feature combination in the spec; is it already covered? If yes, is it also possible to partially apply function items with keywords?…&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;declare function local:f($s, $t) { $s - $t };
local:f#2(s := 12, t := ?)(8),
local:f(?, ?)(s := 12, t := ?)(8)
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If 2x yes, I can try to add some more test cases (for example, I assume that &lt;code&gt;$f(t := 12, ?)&lt;/code&gt; is illegal, as arguments without keywords probably need to be placed first).&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
