<item>
   <title>Issue #1136 created</title>
   <pubDate>2024-04-07T11:34:46Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1136</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1136</guid>
   <description>&lt;div&gt;&lt;p&gt;Defining names for parameters on typed function tests&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;When defining the type of a higher-order function parameter, you cannot currently specify the names of the parameters of that higher-order function.&lt;/p&gt;
&lt;p&gt;Allowing this can be useful for variou reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;documenting the parameter names in the function signature -- this makes it clear looking at the function in an IDE, etc. what the parameters are;&lt;/li&gt;
&lt;li&gt;making the specs clearer by referring to the parameters by name;&lt;/li&gt;
&lt;li&gt;allowing a processor to provide better error messages by referring to the parameters names, e.g. when there is a type conversion error;&lt;/li&gt;
&lt;li&gt;allowing a user to reference the parameter by name if we enable this to resolve named keyword argments (which is currently being discussed in #1114).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Thus, you could declare e.g. &lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#func-index-where"&gt;index-where&lt;/a&gt; like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;declare function fn:index-where(
  $input as item()*,
  $predicate as function(
    $item as item(),
    $position as xs:integer
  ) as xs:boolean
) as xs:integer* {
  (: ... :)
};
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
