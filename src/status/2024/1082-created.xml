<item>
   <title>Issue #1082 created</title>
   <pubDate>2024-03-13T17:35:02Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1082</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1082</guid>
   <description>&lt;div&gt;&lt;p&gt;Inconsistency in underscore in numeric literal grammar&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;&lt;a href="https://qt4cg.org/specifications/xquery-40/xpath-40.html#id-numeric-literals"&gt;Numeric Literals&lt;/a&gt; describes permitting underscores to be used as separators in sequences of digits within long numbers. The first interpretation rule says underscores are first stripped out.&lt;/p&gt;
&lt;p&gt;But the grammar provided appears to me to be inconsistent.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;IntegerLiteral	   ::=   	Digits
DecimalLiteral	   ::=   	("." Digits) | (Digits "." [0-9]*)
DoubleLiteral	   ::=   	(("." Digits) | (Digits ("." [0-9]*)?)) [eE] [+-]? Digits
Digits	           ::=   	DecDigit ((DecDigit | "_")* DecDigit)?
DecDigit	   ::=   	[0-9]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;Digits&lt;/code&gt; permits underscores in the grammar, which works in the integer portion of the numeric literal, but when the value exceeds 1 the fractional part is described as &lt;code&gt;[0-9]*&lt;/code&gt;. If underscore stripping is a 'pre-parsing' step, then &lt;code&gt;Digits&lt;/code&gt; need not mention it at all.&lt;/p&gt;
&lt;p&gt;On the other hand if the grammar is defining the sequence of characters that are permitted, then the fractional section in the grammar should also permit underscores, which it plainly does not in the presence of an integer part. (The test &lt;code&gt;seconds-010&lt;/code&gt; uses such in an expansion of Ï€.)&lt;/p&gt;
&lt;p&gt;An alternative formulation that I think does describe underscores in fractional parts might be:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; DecimalLiteral	   ::=   	("." Digits) | (Digits "." Digits?) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and similarly for &lt;code&gt;DoubleLiteral&lt;/code&gt;. I know this isn't a game-changer, but for those generating grammars, consistency certainly helps.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
