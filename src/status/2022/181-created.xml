<item>
   <title>Issue #181 created</title>
   <pubDate>2022-10-05T10:55:18Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/181</link>
   <guid>https://qt4cg.org/@qt4cg/2022/#created-181</guid>
   <description>&lt;div&gt;&lt;p&gt;HOF Sequence Functions with Positional Arguments&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Motivated by @michaelhkayâ€™s question in https://github.com/qt4cg/qtspecs/issues/80#issuecomment-1253495999, I wondered if we should ~~add optional positional arguments to built-in sequence functions that take higher-order function arguments~~ (thanks, Dimitre:) extend the types of the functions that are themselves parameters to certain standard functions, by adding to their signature one more parameter, which is the index of the item that is also passed as an argument to this function.&lt;/p&gt;
&lt;p&gt;Some examples:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;(: fn:filter: Accept items that are identical to their predecessors :)
fn:filter(
  $sequence,
  fn($item, $pos) { $item = $sequence[$pos - 1] }
)

(: fn:for-each: Create enumerated strings for all items :)
for-each(
  $sequence,
  fn($item, $pos) { $pos || '. ' || $item }
)

(: fn:for-each-pair: Create enumerated strings for the maximum value of all item pairs :)
for-each-pair(
  $seq1, $seq2,
  fn($item1, $item2, $pos) { $pos || '. ' || max(($item1, $item2)) }
)

(: fn:fold-left: Return positions of the items matching a specific value :)
let $input := (11 to 21, 21 to 31)
let $search := 21
return fold-left($input, (), fn($seq, $curr, $pos) { $seq, $pos[$curr = $search] })
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt; I was wrong with my claim that the filter function could be used to replace &lt;code&gt;index-where&lt;/code&gt;, and I have modified the example.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
