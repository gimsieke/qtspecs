<item>
   <title>Issue #687 created</title>
   <pubDate>2023-09-07T15:21:50Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/687</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-687</guid>
   <description>&lt;div&gt;&lt;p&gt;Constructor functions for user-defined types&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;This is a deficiency in the 3.1 F+O specification.&lt;/p&gt;
&lt;p&gt;Constructor functions for user-defined types are very poorly described:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It's unclear how anonymous types are handled. The spec says there is a constructor function for every simple type in the static context. That would include anonymous types. But constructor functions for anonymous types, if they exist, are essentially useless, because their names are not known.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The semantics of constructor functions for user-defined list and union types are described very vaguely, by analogy with built-in types; and the analogy points to the section on built-in atomic types which doesn't cover union and list types.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For a union type &lt;code&gt;U&lt;/code&gt;, it says that the return type of the constructor U(x) is defined as &lt;code&gt;xs:anyAtomicType&lt;/code&gt;. Why not define it as &lt;code&gt;U&lt;/code&gt;? Perhaps this predates the ability to use union types as return types.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
