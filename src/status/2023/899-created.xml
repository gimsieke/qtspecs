<item>
   <title>Issue #899 created</title>
   <pubDate>2023-12-13T15:31:05Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/899</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-899</guid>
   <description>&lt;div&gt;&lt;p&gt;Simplifying the language - types have behaviour.&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I may misunderstand something but I always find the use of types and "as" to be counter intuitive (I'd prefer to be able to run an xslt 3+ script in some sort of 'strict' mode that was a bit more rigid, but thus simpler) e.g.&lt;/p&gt;
&lt;p&gt;consider&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;      &amp;lt;xsl:variable name="foo1"&amp;gt;
         &amp;lt;foo/&amp;gt;
      &amp;lt;/xsl:variable&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;question - what is the type of &lt;code&gt;foo1&lt;/code&gt;?
answer - (according to my saxon/oxygen setup the answer is) "document-node"&lt;/p&gt;
&lt;p&gt;consider&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;      &amp;lt;xsl:variable name="foo2" as="element(foo)"&amp;gt;
         &amp;lt;foo/&amp;gt;
      &amp;lt;/xsl:variable&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;question - is this code valid then (I would as someone not used to xslt 2+ assume not)?
answer - yes&lt;/p&gt;
&lt;p&gt;but surely this code is identical to foo1, so the 'type' of variable is actually changing the interpretation of the expression.&lt;/p&gt;
&lt;p&gt;For me that's quite confusing&lt;/p&gt;
&lt;p&gt;It would appear that these 2 values are not two different views (interfaces) of the same underlying value, else this&lt;/p&gt;
&lt;p&gt;&lt;code&gt;     &amp;lt;xsl:variable name="foo3" as="element(foo)" select="$foo1"/&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;would be valid.&lt;/p&gt;
&lt;p&gt;It isnt (i.e. this doesn't appear to be some subtle OO style scenario where an evaluation can have multiple interfaces, here 'document-node' and 'element' are presumably disjoint types).&lt;/p&gt;
&lt;p&gt;For me conceptually types are descriptions of expressions, they have no behaviour, yet here they appear to (to me) effect the interpretation, not simply describe it.&lt;/p&gt;
&lt;p&gt;For me, I'd prefer a 'strict' mode where either&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;      &amp;lt;xsl:variable name="foo2" as="element(foo)"&amp;gt;
         &amp;lt;foo/&amp;gt;
      &amp;lt;/xsl:variable&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;is a type error, because the expression is clearly a document-node OR some other mechanism to clarify the ambiguity without this conceptual wrinkle.&lt;/p&gt;
&lt;p&gt;An expression should either have 1 interpretation, or if its ambigious, that should be an error, I don't think the language should default to prefer one over another.&lt;/p&gt;
&lt;p&gt;P.S.
why doesnt this work? I genuinely don't know how to explicitly declare something as a document-node.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;xsl:variable name="foo1" as=document-node()&amp;gt;
     &amp;lt;foo/&amp;gt;
  &amp;lt;/xsl:variable&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
