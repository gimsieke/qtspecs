<item>
   <title>Issue #865 created</title>
   <pubDate>2023-12-03T00:49:44Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/865</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-865</guid>
   <description>&lt;div&gt;&lt;p&gt;Need to explain change in numeric comparison semantics&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;We need to explain more clearly that we now have different rules for comparing numeric values in different circumstances. My understanding of the situation is:&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;eq&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, etc, we continue to use the XPath 2.0/3.0/3.1 rules for backwards compatibility reasons: for example comparison between decimal and double is done by converting the decimal to a double. This has known problems in terms of transitivity, but we have retained the rules because we identified that too many compatibility problems would be introduced by changing them.&lt;/p&gt;
&lt;p&gt;For deep-equal, distinct-values, XSLT and XQuery grouping, etc, we have switched to the rules that were introduced for comparing map keys in 3.0, now available through the fn:atomic-equal function. Under these rules, doubles are promoted to decimals for comparison.&lt;/p&gt;
&lt;p&gt;We should probably include a table showing which rules are used where.&lt;/p&gt;
&lt;p&gt;A good example to use is (1e-3 = 0.001). This is true in both 3.1 and 4.0. But under the rules for maps in 3.1, and the new rules for distinct-values in 4.0, these two values are considered distinct.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
