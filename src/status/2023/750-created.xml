<item>
   <title>Issue #750 created</title>
   <pubDate>2023-10-15T22:56:41Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/750</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-750</guid>
   <description>&lt;div&gt;&lt;p&gt;xsl:mode/@as and built-in template rules&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;See ACTION QT4CG-048-01&lt;/p&gt;
&lt;p&gt;The question arose, if an xsl:mode declaration specifies an expected type in @as, then all template rules in that mode are expected/required to deliver a value conforming to that type. But what about the default/fallback template rules? Surely they need to deliver a value of that type as well?&lt;/p&gt;
&lt;p&gt;For example, suppose the mode specifies as="xs:boolean". Regardless of the value of &lt;code&gt;xsl:on-no-match&lt;/code&gt;, none of the built-in template rules is going to deliver a boolean. You're expecting a boolean result from xsl:apply-templates, and if none of the template rules match, you're going to get something other than a boolean.&lt;/p&gt;
&lt;p&gt;I think the answer is to say that you get a type error if the built-in template rule for the mode returns a value that's not of the required type.&lt;/p&gt;
&lt;p&gt;I don't think this error should ever be reported statically, because the compiler has no way of knowing whether the set of explicit template rules is sufficient to cover all cases that will actually arise in source documents.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
