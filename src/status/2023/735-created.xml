<item>
   <title>Issue #735 created</title>
   <pubDate>2023-10-02T09:21:28Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/735</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-735</guid>
   <description>&lt;div&gt;&lt;p&gt;Local functions in XSLT&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I propose that we should add local functions to XSLT: specifically, allowing an &lt;code&gt;xsl:function&lt;/code&gt; declaration to appear within a sequence constructor, declaring a named function that is available for use only within the sequence constructor.&lt;/p&gt;
&lt;p&gt;At present this can be achieved by declaring a local variable bound to an anonymous function, but it's clumsy to have to use completely different syntax for local and global functions, and functions defined in this way cannot be mutually recursive.&lt;/p&gt;
&lt;p&gt;I propose that such functions should shadow any global functions with the same name, in the same way as happens with local variable declarations. I have an open mind as to whether shadowing of functions in reserved namespaces should be allowed.&lt;/p&gt;
&lt;p&gt;The main difficulty is the scoping rules. We don't want the problems Javascript has with "hoisting". I propose that (a) all local function declarations must appear before any instructions (or local variable declarations, but not params) within the sequence constructor, and (b) these function declarations are in-scope throughout the sequence constructor including forwards references from the body of other functions declared earlier within the same sequence constructor.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
