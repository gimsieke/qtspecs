<item>
   <title>Issue #779 created</title>
   <pubDate>2023-10-26T03:18:30Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/779</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-779</guid>
   <description>&lt;div&gt;&lt;p&gt;Hash/checksum function&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I propose a new function for the core XPath functions, here called &lt;code&gt;fn:hash()&lt;/code&gt; for the sake of discussion. The goal is to give XPath users access to CRC, checksum, and cryptographic hash functions.&lt;/p&gt;
&lt;h3&gt;Rationale&lt;/h3&gt;
&lt;p&gt;Simple checksums functions, such as those from the Fletcher family, are relatively easy to write in a host language such as XSLT. More complex ones are far more challenging to write, and may incur serious performance penalties. For example, from the TAN function library, see the &lt;a href="https://github.com/textalign/TAN-2021/blob/master/functions/checksums/TAN-fn-hash-and-check.xsl"&gt;MD5 checksum/hash functions&lt;/a&gt;. (Yes, one day I thought it would be fun to try to implement the MD5 algorithm in XSLT.) Most programming languages in which an implementation is written have access to cryptographic libraries that are highly performative.&lt;/p&gt;
&lt;p&gt;Hash functions are widely used, and certainly important in XML-based workflows, whether as filenames, database fields, etc.&lt;/p&gt;
&lt;p&gt;The closest comparable existing functions is &lt;code&gt;generate-id()&lt;/code&gt;, but this was designed as an identifier for nodes.&lt;/p&gt;
&lt;p&gt;In short, I believe there is a significant need that outstrips current functionality.&lt;/p&gt;
&lt;p&gt;In the draft below, I have adopted only the MD-5 algorithm as a core requirement, to catalyze discussion. I have assumed the user wants the string form of the output, not the raw bits. I have not tried to flesh out prose that would warn users away from security complacency.&lt;/p&gt;
&lt;p&gt;For discussion, &lt;a href="https://en.wikipedia.org/wiki/List_of_hash_functions"&gt;here is a list of relevant algorithms&lt;/a&gt;. I look forward to community feedback.&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;fn:hash&lt;/code&gt; Draft Specification&lt;/h3&gt;
&lt;h4&gt;Summary&lt;/h4&gt;
&lt;p&gt;This function takes as input a string or octet sequence and returns a string representation of the results from a specified hash, checksum, or cyclic redundancy check function.&lt;/p&gt;
&lt;h4&gt;Signature&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;fn:hash(
   $value as union(xs:string, xs:hexBinary, 
                   xs:base64Binary)?   := fn:string(.),
   $algorithm as xs:string             := "md5"
) as xs:string?
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Properties&lt;/h4&gt;
&lt;p&gt;The zero-argument form of this function is deterministic, context-dependent, and focus-dependent.&lt;/p&gt;
&lt;p&gt;The one- and two-argument form of this function is deterministic, context-independent, and focus-independent.&lt;/p&gt;
&lt;h4&gt;Rules&lt;/h4&gt;
&lt;p&gt;If the zero-argument version of the function is used, the result is the same as calling the one-argument version, with &lt;code&gt;$value&lt;/code&gt; set to &lt;code&gt;fn:string(.)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If the one-argument version of the function is used, the result is the same as calling the two-argument version, with &lt;code&gt;$algorithm&lt;/code&gt; set to "md5".&lt;/p&gt;
&lt;p&gt;The effective value of &lt;code&gt;$algorithm&lt;/code&gt; is the value of the expression &lt;code&gt;fn:lower-case(fn:replace($function, '\W+', ''))&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;$value&lt;/code&gt; is the empty sequence, or a string of zero length, the function returns the empty sequence.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;$value&lt;/code&gt; is an instance of &lt;code&gt;xs:string&lt;/code&gt; it is cast to &lt;code&gt;xs:hexBinary&lt;/code&gt; on the basis of UTF-8 encoding. If &lt;code&gt;$value&lt;/code&gt; is an instance of &lt;code&gt;xs:base64Binary&lt;/code&gt; it is cast to &lt;code&gt;xs:hexBinary&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The function returns an &lt;code&gt;xs:string&lt;/code&gt; representation of the bytes returned by passing the &lt;code&gt;xs:hexBinary&lt;/code&gt; value of &lt;code&gt;$value&lt;/code&gt; as an octet sequence through the specified hash or checksum function.&lt;/p&gt;
&lt;p&gt;Conforming implementations MUST support &lt;code&gt;md5&lt;/code&gt; and the associated MD5 Message-Digest algorithm defined by RFC 6151 (update to RFC 1321). They MAY support other checksum and hash functions with implementation-defined semantics.&lt;/p&gt;
&lt;h4&gt;Error Conditions&lt;/h4&gt;
&lt;p&gt;A dynamic error is raised &lt;em&gt;[err:XXXXXXX]&lt;/em&gt; if the effective value of &lt;code&gt;$algorithm&lt;/code&gt; is not one of the values supported by the implementation.&lt;/p&gt;
&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The MD5 algorithm is normally not used for cryptographic purposes. &lt;em&gt;[More cautionary prose about not assuming that something can be trusted as secure.]&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Examples&lt;/h4&gt;
&lt;p&gt;Expression | Result
-- | --
fn:hash("abc") | 900150983cd24fb0d6963f7d28e17f72
fn:hash("ABC") | 902fbdd2b1df0c4f70b4a5d23525e932&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
