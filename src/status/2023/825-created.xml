<item>
   <title>Issue #825 created</title>
   <pubDate>2023-11-09T02:03:55Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/825</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-825</guid>
   <description>&lt;div&gt;&lt;p&gt;array:members-at&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The title says it all.&lt;/p&gt;
&lt;p&gt;We have &lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#func-slice"&gt;&lt;strong&gt;fn:slice&lt;/strong&gt;&lt;/a&gt; and &lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#func-array-slice"&gt;&lt;strong&gt;array:slice&lt;/strong&gt;&lt;/a&gt;. We also do have &lt;strong&gt;&lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#func-items-at"&gt;fn:items-at&lt;/a&gt;&lt;/strong&gt;, but we have somehow missed to add the corresponding &lt;s&gt;&lt;strong&gt;array:items-at&lt;/strong&gt;&lt;/s&gt; &lt;strong&gt;array:members-at&lt;/strong&gt; function.&lt;/p&gt;
&lt;p&gt;We could even think of a function &lt;strong&gt;map:entries-at&lt;/strong&gt; and &lt;strong&gt;map:values-for-keys&lt;/strong&gt;. The first of these would return all map entries that have as keys one of the provided as argument set of keys. The 2nd function would return all values of the map entries that have as keys one of the provided as argument set of keys.&lt;/p&gt;
&lt;p&gt;Here is a complete XPath 3.1 implementation:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xq"&gt;let $members-at := function(
                 $input as array( *), 
                 $indexes as xs:integer*
                ) as array(*)*
 {
     for $ind in $indexes
       return [$input($ind)]
 }
&lt;/code&gt;&lt;/pre&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Evaluating this expression:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xq"&gt;let $members-at := function(
                 $input as array( *), 
                 $indexes as xs:integer*
                ) as array(*)*
 {
     for $ind in $indexes
       return [$input($ind)]
 }
  return
     $members-at([1, (2, 3), (4, 5, 6)], (1, 3) )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;produces the wanted result:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[1], [(4,5,6)]&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
