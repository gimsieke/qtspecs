<item>
   <title>Issue #666 created</title>
   <pubDate>2023-08-17T10:02:50Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/666</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-666</guid>
   <description>&lt;div&gt;&lt;p&gt;Polyfill function implementations&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;For transition purposes, it may be useful to provide or enable "polyfill" implementations of functions that are specified in QT40, but not yet available in all implementations. Currently this is not possible because the relevant namespaces are reserved.&lt;/p&gt;
&lt;p&gt;I propose that we relax the rule on reserved function namespaces:&lt;/p&gt;
&lt;p&gt;(a) in XQuery, if the function has an annotation along the lines `%polyfill('http://www.w3.org/2005/xpath-functions'), where the parameter indicates that the function should be injected into the specified namespace instead of the namespace of the containing module.&lt;/p&gt;
&lt;p&gt;(b) in XSLT, if the attribute &lt;code&gt;xsl:function/@override-extension-function="no"&lt;/code&gt; is present. A function is allowed to be in a reserved namespace if this attribute is present.&lt;/p&gt;
&lt;p&gt;I've chosen syntax here that's already available in 3.0/3.1, to minimise the impact on existing processors. Of course, we can't retrospectively change the 3.0/3.1 specs to authorise older processors to make this work as intended. But we can suggest that they bend the rules.&lt;/p&gt;
&lt;p&gt;In both cases, (a) if the annotation is present then the rules on reserved namespaces don't apply, and (b) the function declaration is ignored if the processor provides its own internal implementation of the function.&lt;/p&gt;
&lt;p&gt;I'm proposing to publish polyfill implementations of many of the new functions (not the complex ones like parse-html!). But I don't intend to make this a QT4 deliverable, I'm thinking of doing it as an open source project in GitHub/Saxonica space.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
