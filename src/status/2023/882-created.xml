<item>
   <title>Issue #882 created</title>
   <pubDate>2023-12-06T18:53:12Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/882</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-882</guid>
   <description>&lt;div&gt;&lt;p&gt;fn:chain or fn:compose&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I thought I had a great opportunity to use &lt;code&gt;fn:chain&lt;/code&gt; the other day, and then found it didn't do what I wanted.&lt;/p&gt;
&lt;p&gt;I wanted to negate a predicate: in pseudo-code&lt;/p&gt;
&lt;p&gt;&lt;code&gt;items-where($seq, not contains(?, "e"))&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;and I thought I could do this by chaining &lt;code&gt;contains&lt;/code&gt; and &lt;code&gt;not&lt;/code&gt;. But it doesn't work that way: &lt;code&gt;fn:chain&lt;/code&gt; &lt;em&gt;applies&lt;/em&gt; a sequence of functions to an argument, it doesn't compose a sequence of functions to yield a new function.&lt;/p&gt;
&lt;p&gt;I wonder if a function that composes functions would be more useful, so I could write&lt;/p&gt;
&lt;p&gt;&lt;code&gt;items-where($seq, compose((contains(?, "e"), not#1)))&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
