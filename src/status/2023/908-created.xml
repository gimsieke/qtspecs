<item>
   <title>Issue #908 created</title>
   <pubDate>2023-12-17T11:57:56Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/908</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-908</guid>
   <description>&lt;div&gt;&lt;p&gt;Function identity: documentation still too vague&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;In #520, the concept of function identities was introduced. This is what the current draft says:&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://qt4cg.org/specifications/xpath-datamodel-40/Overview.html#function-items"&gt;XDM, 2.9.4 Function Items&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;identity&lt;/strong&gt;: an abstract property that can be used to test whether two variables refer to the same function or to different functions. This property is exposed only for this purpose.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Currently, the concept of function identity is used for two purposes: firstly, when functions appear in the arguments supplied to the &lt;code&gt;fn:deep-equal&lt;/code&gt; function; and secondly, in establishing whether the arguments and results of a function are "the same" when deciding whether the function is deterministic.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Function identity is not currently defined for maps and arrays, because in the circumstances where function identity would otherwise be used, maps and arrays are compared by examining their content.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#properties-of-functions"&gt;XQFO, 1.8.4 Properties of functions&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ol start="5"&gt;
&lt;li&gt;[…] the two function items have the same function identity. The concept of function identity is explained in Section 2.9.4 Function Items.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#func-deep-equal"&gt;XQFO, 14.2.8 fn:deep-equal&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;c. &lt;code&gt;$i1&lt;/code&gt; and &lt;code&gt;$i2&lt;/code&gt; have the same function identity. The concept of function identity is explained in Section 2.9.4 Function Items.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#func-function-lookup"&gt;XQFO, 17.1.1 fn:function-lookup&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The function identity is determined in the same way as for a named function reference. Specifically, if there is no context dependency, two calls on &lt;code&gt;fn:function-lookup&lt;/code&gt; with the same name and arity must return the same function.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While I definitely believe in the concept, I believe the documentation is still cryptic, or even impossible, to understand, at least without reading #520 or consuming the existing QT4 test cases. Here are some questions that I’m trying to answer:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Does “abstract property” mean that the property will not be materialized in an implementation, or does it mean that the property too vague to be precisely defined?&lt;/li&gt;
&lt;li&gt;We should try to specify what “refer to the same function” means. Are function properties that allow us to at least safely identify a subset of functions the same? For example, will &lt;code&gt;true#0&lt;/code&gt; and &lt;code&gt;true#0&lt;/code&gt; always be identical? The test cases imply this, whereas #520 doesn’t.&lt;/li&gt;
&lt;li&gt;In XQFO 17.1.1, there’s a hint that context-dependency influences the decision if functions are identified as equal. Does this mean that &lt;code&gt;name#0&lt;/code&gt; and &lt;code&gt;name#0&lt;/code&gt; cannot be equal? Or can, or will, they be equal if the context is identical?&lt;/li&gt;
&lt;li&gt;The term “deterministic” does not appear anywhere else in the XDM spec, so one is inclined to think of the XQFO nondeterminism. It is then unclear whether two instances of, for example, &lt;code&gt;map:entries&lt;/code&gt; and &lt;code&gt;fn:parse-xml&lt;/code&gt; can be “the same” if the parameters are the same.&lt;/li&gt;
&lt;li&gt;In XQFO 17.1.1, “must return the same function.” is also unclear: What exactly is meant by “same function”? Is it a function that creates an identical result (thus, excluding nondeterministic functions like &lt;code&gt;fn:parse-xml&lt;/code&gt;)?&lt;/li&gt;
&lt;li&gt;We should explain better what was the motivation to include the context-dependency of functions in the definition. It would certainly be more intuitive if both &lt;code&gt;deep-equal(name#0, name#0)&lt;/code&gt; and &lt;code&gt;deep-equal(name#1, name#1)&lt;/code&gt; returned &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’m sorry for not offering good answers in return. I could try to describe what we’ve implemented so far – mostly inspired by the test cases – but I’m not sure if it meets the requirements.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
