<item>
   <title>Issue #539 created</title>
   <pubDate>2023-06-06T20:20:06Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/539</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-539</guid>
   <description>&lt;div&gt;&lt;p&gt;FLOWR where clause with a "do when false" option&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;This is a request for an enhancement.&lt;/p&gt;
&lt;p&gt;Fairly often, I'll have a query arranged as&lt;/p&gt;
&lt;p&gt;let $step1 := &lt;em&gt;do some processing&lt;/em&gt;
where exists($step1)
let $step2 := &lt;em&gt;processing based on step1&lt;/em&gt;
where exists($step2)&lt;/p&gt;
&lt;p&gt;and so on.&lt;/p&gt;
&lt;p&gt;This is a convenient pattern until I want to emit some sort of message about where the process stops.&lt;/p&gt;
&lt;p&gt;It would be convenient to have&lt;/p&gt;
&lt;p&gt;where &lt;em&gt;expression&lt;/em&gt; else &lt;em&gt;expression&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;with the else as an optional extension of the where clause to allow emitting information about which where clause the FLOWR expression stopped on.&lt;/p&gt;
&lt;p&gt;It might be more congruent to the style of the language as&lt;/p&gt;
&lt;p&gt;where &lt;em&gt;expression&lt;/em&gt; return &lt;em&gt;expression&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;but then again having multiple return keywords isn't obviously a good thing.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
