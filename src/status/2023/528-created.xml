<item>
   <title>Issue #528 created</title>
   <pubDate>2023-05-28T20:08:08Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/528</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-528</guid>
   <description>&lt;div&gt;&lt;p&gt;fn:elements-to-maps (before: Review of the fn:json() function)&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I've been writing tests for the fn:json function, whose spec I haven't read for quite a while, so it's an opportunity (a) to request WG review of the spec, and (b) for some minor comments.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I think a better name for the function might be &lt;code&gt;fn:to-json&lt;/code&gt;. Any other suggestions?&lt;/li&gt;
&lt;li&gt;Where we specify that a JSON object should be output with particular properties, I think we should be consistent about whether or not we prescribe the order. Writing tests is a lot easier if the order is always prescribed!&lt;/li&gt;
&lt;li&gt;Document nodes: it would be better to output both the document URI and the base URI where available.&lt;/li&gt;
&lt;li&gt;Under "The children of the element are processed as follows" there are four rules. In the case where an element has just one element node child, I think rule 4 should apply rather than rule 3.&lt;/li&gt;
&lt;li&gt;Under Processing-Instruction nodes: typo "A JSON object with a two properties".&lt;/li&gt;
&lt;li&gt;The section starting "Strings are escaped as follows" should be promoted up a level.&lt;/li&gt;
&lt;li&gt;Representing functions: I propose a different set of rules. (a) for a function that is a reference to a built-in or user-defined function definition, output "Q{uri}local#arity". (b) for an anonymous function, output "#anonymous-function". The rationale is that the JSON output here isn't going to be useful except as a placeholder to indicate that a function item is present.&lt;/li&gt;
&lt;li&gt;We might want to be more prescriptive about how numbers are formatted (or to provide user options)&lt;/li&gt;
&lt;li&gt;Like many XML-to-JSON libraries, there's the problem that two instances of the same element type might be output very differently depending on which children are present. For example the representation of a book with two authors might be very different from a book with one author. I would suggest that rather than the boolean &lt;code&gt;element-map&lt;/code&gt; option, we allow the options to include a list of element names for which &lt;code&gt;object&lt;/code&gt; representation rather than &lt;code&gt;array&lt;/code&gt; representation is to be used.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
