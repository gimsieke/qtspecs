<item>
   <title>Issue #788 created</title>
   <pubDate>2023-10-30T08:48:42Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/788</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-788</guid>
   <description>&lt;div&gt;&lt;p&gt;New function fn:annotate()&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I propose a function fn:annotate() which will add annotations to a function item. It will create a new function item that differs from the original only in its annotations.&lt;/p&gt;
&lt;p&gt;Currently annotations are a dynamic property of function items, but they can only be set in very limited ways. Allowing them to be set dynamically creates lot of opportunities. For example, there is currently no way to set annotations on a map or array, but one could define annotations, for example, to indicate that a map should hold entries ordered by key, or that an array should use a "sparse" implementation; there is scope both for spec-defined and vendor-defined (and perhaps even user-defined) annotations.&lt;/p&gt;
&lt;p&gt;Some of the possibilities this would open up have been outlined in other issues. At present, though, we have a capability in the data model that is underexploited, and an &lt;code&gt;fn:annotate()&lt;/code&gt; function is a conceptually simple addition, which can be justified purely on the grounds of completeness - if something exists in the data model, surely it should have getters and setters?&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
