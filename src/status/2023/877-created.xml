<item>
   <title>Issue #877 created</title>
   <pubDate>2023-12-06T03:29:12Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/877</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-877</guid>
   <description>&lt;div&gt;&lt;p&gt;Inconsistency in XQFO comparator functions/operators with recursive rules&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The rules for &lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#func-hexBinary-less-than"&gt;op:hexBinary-less-than()&lt;/a&gt; appear to define a recursive octet-by-octet operation, but I think it flounders in rule 3, where it does not ask for rule 2 to be applied seriatim to each octet pair, but asks for an en masse comparison of two octet sequences.&lt;/p&gt;
&lt;p&gt;Compare to 5.3.2, &lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#codepoint-collation"&gt;Unicode Codepoint Collation&lt;/a&gt;, which describes a similar recursive item-for-item comparison. Interesting formal differences (e.g., unordered list versus ordered list).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#func-deep-equal"&gt;fn:deep-equal()&lt;/a&gt; is similar, but it is also much more complex. Nevertheless, the way it breaks down the problem at the outset, to dispense immediately with the recursive factor, and deal simply with the rules for equality, is IMO admirable.&lt;/p&gt;
&lt;p&gt;It would be nice if there were a bit more consistency in the prose and presentation of recursive rules. Do others agree, and are there other functions/operations that should be considered in this question? I'm thinking immediately only of comparator functions/operations, not functions that use recursion to filter or create. (There may be parallels, but let's start with those functions that are most similar.)&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
