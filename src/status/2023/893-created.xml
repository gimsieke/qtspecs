<item>
   <title>Issue #893 created</title>
   <pubDate>2023-12-11T17:46:56Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/893</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-893</guid>
   <description>&lt;div&gt;&lt;p&gt;fn:compare: Support for arbitrary atomic types&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Inspired by #866:&lt;/p&gt;
&lt;p&gt;We should extend &lt;code&gt;fn:compare&lt;/code&gt; to support arbitrary atomic types. The comparison rules…&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;would be unchanged for strings,&lt;/li&gt;
&lt;li&gt;would rely on &lt;code&gt;fn:numeric-compare&lt;/code&gt; for numbers, and&lt;/li&gt;
&lt;li&gt;would rely on the existing &lt;code&gt;op:&lt;/code&gt; functions for the remaining types.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, the rule for dates would be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt; is returned if &lt;code&gt;op:date-equal(A, B)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-1&lt;/code&gt; is returned if &lt;code&gt;op:date-less-than(A, B)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1&lt;/code&gt; is returned otherwise.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some types will be rejected (&lt;code&gt;xs:duration&lt;/code&gt;, &lt;code&gt;xs:QName&lt;/code&gt;, &lt;code&gt;xs:NOTATION&lt;/code&gt;, Gregorian types).&lt;/p&gt;
&lt;p&gt;In addition, I would vote for making &lt;code&gt;fn:numeric-compare&lt;/code&gt; and &lt;code&gt;fn:atomic-equal&lt;/code&gt; private. I don’t see a benefit to expose them; I rather expect people to be confused.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
