<item>
   <title>Issue #637 created</title>
   <pubDate>2023-07-25T13:35:03Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/637</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-637</guid>
   <description>&lt;div&gt;&lt;p&gt;Annotation Values: Booleans&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Functions annotations in XQuery have become a popular feature to attach vendor-specific information (for unit testing, locking, RESTXQ, etc.) to functions.&lt;/p&gt;
&lt;p&gt;Annotation values are limited to literals, though. It would often be helpful to supply boolean values, but we don’t have literals for that in the language.&lt;/p&gt;
&lt;p&gt;I suggest enhancing the existing grammar…&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Annotation  ::=  "%" EQName ("(" Literal ("," Literal)* ")")?
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;…and allowing the strings &lt;code&gt;false()&lt;/code&gt; and &lt;code&gt;true()&lt;/code&gt; as values:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Annotation  ::=  "%" EQName ("(" AnnotationValue ("," AnnotationValue)* ")")?
AnnotationValue  :=  Literal | "false()" | "true()"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The suggestion is upward compatible if we should decide later on that we want to allow arbitrary expressions for annotation values.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
