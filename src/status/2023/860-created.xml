<item>
   <title>Issue #860 created</title>
   <pubDate>2023-11-26T19:46:04Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/860</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-860</guid>
   <description>&lt;div&gt;&lt;p&gt;Unary Lookup when the context value is a sequence&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;We have added the text&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the context value is anything other than a single item, the semantics of the expression ?KS are defined to be equivalent to the expression . ! ?KS. The remainder of this section therefore explains the semantics on the assumption that the [context value] is a single item, referred to as the context item.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Consider the case where the context value is a sequence of two maps &lt;code&gt;(map{'x':1, 1:'p', 2:'q'}, map{'x':2, 1:'P', 2:'Q'})&lt;/code&gt; and the expression is &lt;code&gt;?(?x)&lt;/code&gt;. What is the context for evaluation of the key specifier &lt;code&gt;(?x)&lt;/code&gt;? I would have expected that we evaluate the key specifier once, in the outer context, so the key specifier value is &lt;code&gt;(1,2)&lt;/code&gt; and we therefore take the entries with keys 1 and 2 in both maps, giving a result of ('p', 'q', 'P', 'Q'). But the cited paragraph suggests we evaluate KS separately for each item in the context value, and this return entry 1 of map 1 and entry 2 of map 2, giving a result of ('p', 'Q').&lt;/p&gt;
&lt;p&gt;I know it's an edge case and it's unlikely in practice that people will write context-dependent key specifiers, but the rules need to be clear. I thought we had previously decided that the key specifier expression should be evaluated in the outer context.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
