<item>
   <title>Issue #517 created</title>
   <pubDate>2023-05-21T01:43:18Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/517</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-517</guid>
   <description>&lt;div&gt;&lt;p&gt;fn:chain (before: fn:multi-compose)&lt;/p&gt;&lt;div class="markup"&gt;&lt;h1&gt;&lt;strong&gt;FO: fn:multi-compose : Evaluate a chain of functions&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;As per Wikipedia:&lt;/p&gt;
&lt;p&gt;" In &lt;a href="https://en.wikipedia.org/wiki/Mathematics"&gt;mathematics&lt;/a&gt;, &lt;strong&gt;function composition&lt;/strong&gt; is an operation  ∘  that takes two &lt;a href="https://en.wikipedia.org/wiki/Function_(mathematics)"&gt;functions&lt;/a&gt; &lt;em&gt;f&lt;/em&gt; and &lt;em&gt;g&lt;/em&gt;, and produces a function &lt;/p&gt;
&lt;p&gt;&lt;em&gt;h&lt;/em&gt; = &lt;em&gt;g&lt;/em&gt;  ∘  &lt;em&gt;f&lt;/em&gt; such that &lt;em&gt;h&lt;/em&gt;(&lt;em&gt;x&lt;/em&gt;) = &lt;em&gt;g&lt;/em&gt;(&lt;em&gt;f&lt;/em&gt;(&lt;em&gt;x&lt;/em&gt;)).&lt;/p&gt;
&lt;p&gt;In this operation, the function &lt;em&gt;g&lt;/em&gt; is &lt;a href="https://en.wikipedia.org/wiki/Function_application"&gt;applied&lt;/a&gt; to the result of applying the function &lt;em&gt;f&lt;/em&gt; to &lt;em&gt;x&lt;/em&gt;. That is, the functions &lt;/p&gt;
&lt;p&gt;&lt;em&gt;f&lt;/em&gt; : &lt;em&gt;X&lt;/em&gt; → &lt;em&gt;Y&lt;/em&gt; and &lt;em&gt;g&lt;/em&gt; : &lt;em&gt;Y&lt;/em&gt; → &lt;em&gt;Z&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;are &lt;strong&gt;composed&lt;/strong&gt; to yield a function that maps &lt;em&gt;x&lt;/em&gt; in &lt;a href="https://en.wikipedia.org/wiki/Domain_of_a_function"&gt;domain&lt;/a&gt; &lt;em&gt;X&lt;/em&gt; to &lt;em&gt;g&lt;/em&gt;(&lt;em&gt;f&lt;/em&gt;(&lt;em&gt;x&lt;/em&gt;)) in &lt;a href="https://en.wikipedia.org/wiki/Codomain"&gt;codomain&lt;/a&gt; &lt;em&gt;Z&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Intuitively, if &lt;em&gt;z&lt;/em&gt; is a function of &lt;em&gt;y&lt;/em&gt;, and &lt;em&gt;y&lt;/em&gt; is a function of &lt;em&gt;x&lt;/em&gt;, then &lt;em&gt;z&lt;/em&gt; is a function of &lt;em&gt;x&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The resulting &lt;em&gt;composite&lt;/em&gt; function is denoted &lt;em&gt;g&lt;/em&gt; ∘ &lt;em&gt;f&lt;/em&gt; : &lt;em&gt;X&lt;/em&gt; → &lt;em&gt;Z&lt;/em&gt;, defined by:&lt;/p&gt;
&lt;p&gt; (&lt;em&gt;g&lt;/em&gt; ∘ &lt;em&gt;f&lt;/em&gt; )(&lt;em&gt;x&lt;/em&gt;) = &lt;em&gt;g&lt;/em&gt;(&lt;em&gt;f&lt;/em&gt;(&lt;em&gt;x&lt;/em&gt;)) for all &lt;em&gt;x&lt;/em&gt; in &lt;em&gt;X&lt;/em&gt;
"&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;In this Proposal we generalize function composition to the case when a sequence of functions are composed together, so that the last one is applied on an argument $x, then  the last-but-one is applied on the result of this application, and so on … until finally the first function in the sequence is applied on the result produced so far.&lt;/p&gt;
&lt;p&gt;This is an effective way of chaining a sequence of functions together, and we don’t need to invent or use any special operators or syntax, but we just pass this sequence of functions as argument to &lt;strong&gt;&lt;em&gt;fn:multi-compose&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;fn:multi-compose := function($funs as function(*)*, $x)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Here is an XPath 3.0 implementation of fn:multi-compose&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xq"&gt;let $apply := function($f, $x) {fn:apply($f, [$x])},
    $multi-compose := function($funs as function(*)*, $x)
                  {
                    fold-right($funs, $x, $apply)
                  },
    (: The functions $incr and $times are needed just to show this example :) 
    $incr := function($x) {op("+")(?, $x)},
    $times := function($y) {op("*")(?, $y)}                 
                  
 return
   $multi-compose(($times(5), $incr(1)), 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As wanted, the result of evaluating this is&lt;/p&gt;
&lt;p&gt;15: (2 +1) * 5&lt;/p&gt;
&lt;h2&gt;Remarks&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;In this implementation the type of the 2nd (last) argument of &lt;strong&gt;&lt;em&gt;$multi-compose&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;$apply&lt;/em&gt;&lt;/strong&gt; is &lt;code&gt;item()*&lt;/code&gt; (any) and as such it is omitted. In case the function to be applied first, needs  more than one argument, all of its arguments must be presented in the function call as a single sequence , and are passed (in order) as the members of a single array, as already implemented by the standard &lt;strong&gt;&lt;a href="https://www.w3.org/TR/xpath-functions-31/#func-apply"&gt;fn:apply&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is a dynamic error if any of the function applications produces a result which does not belong to the Domain of the function immediately preceding it in the function sequence.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
