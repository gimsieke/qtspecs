<item>
   <title>Issue #707 created</title>
   <pubDate>2023-09-15T16:59:47Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/707</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-707</guid>
   <description>&lt;div&gt;&lt;p&gt;Dynamic Function Calls: Processing Empty Sequences&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;A fundamental – and brilliant – property of XPath is that many operations tolerate empty sequences: Instead of throwing an error, the empty result is passed on unchanged to the next operation. While this is unrewardingly confusing for binary operations (&lt;code&gt;() + 1&lt;/code&gt;, &lt;code&gt;() eq 5&lt;/code&gt;), it’s wonderful for pipelines:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;(: paths :)
$nodes / a / b / c
(: lookups :)
$data ? 1 ? 2 ? 3
(: simple map operators :)
$data ! do(.) ! something(.)
(: arrow operator works differently, but the syntax is similar:  :)
$data =&amp;gt; do() =&amp;gt; something()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As far as I can judge, it would be a very simple and user-friendly addition if we extended dynamic function calls to return an empty sequence (instead of raising an error) if the base expression is an empty sequence. This way, the following expressions would all run through:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;let $map := map { 'giovanni': map { 'city': 'roma' } }
return $map('andrea')('city'),
let $data := ()
return $data(1)(2)(3),
()(123),
()()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Many people use parentheses instead of the lookup operator for accessing maps &amp;amp; arrays, and the proposed change would make the syntax more interchangeable. I believe it would also be useful for function items in general.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
