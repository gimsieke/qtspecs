<item>
   <title>Issue #861 created</title>
   <pubDate>2023-11-26T22:52:33Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/861</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-861</guid>
   <description>&lt;div&gt;&lt;p&gt;Precise meaning of $E??KS&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I don't think that the semantics of the expression &lt;code&gt;$E??KS&lt;/code&gt; are clearly enough defined.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The effect of the deep lookup expression E??KS is obtained by evaluating E, establishing its recursive content C, removing any item that is not a map or array to yield a sequence D, and then evaluating the shallow lookup expression D?KS, but with one exception: if evaluation of any shallow lookup fails, then the error is not propagated, but instead its result is taken to be an empty sequence.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;The definition of "recursive content" needs to be tightened up.&lt;/li&gt;
&lt;li&gt;It needs to be more clearly stated which errors we ignore, and which we don't. For example, what if the key specifier evaluates to a non-singleton sequence?&lt;/li&gt;
&lt;li&gt;In the case of &lt;code&gt;$E??*&lt;/code&gt; in particular, I don't think it makes much sense to exclude items that are not maps or arrays. I think the expectation in this case is to return the full recursive content.&lt;/li&gt;
&lt;li&gt;As currently defined, if &lt;code&gt;$M&lt;/code&gt; is a map, the the result of &lt;code&gt;$M??*&lt;/code&gt; includes the map &lt;code&gt;$M&lt;/code&gt; itself. I don't think this matches expectations. Certainly, with the parallel expression &lt;code&gt;$node//*&lt;/code&gt;, the result does not include &lt;code&gt;$node&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
