<item>
   <title>Issue #688 created</title>
   <pubDate>2023-09-07T17:33:43Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/688</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-688</guid>
   <description>&lt;div&gt;&lt;p&gt;Coercion rules for union types and enumeration types&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The coercion rules for enumeration types have not been defined (there is a TODO in the spec).&lt;/p&gt;
&lt;p&gt;For union types (including both schema-defined and locally-defined union types), the rules appear to need some further work. Given types &lt;code&gt;R1&lt;/code&gt; and &lt;code&gt;R2&lt;/code&gt; that are defined by restriction from &lt;code&gt;B1&lt;/code&gt; and &lt;code&gt;B2&lt;/code&gt;, if an atomic value &lt;code&gt;V&lt;/code&gt; is an instance of &lt;code&gt;B1&lt;/code&gt; that conforms to the rules of &lt;code&gt;R1&lt;/code&gt;, then the relabelling coercion means it V will now be acceptable where the required type is &lt;code&gt;R1&lt;/code&gt;. But if the required type is &lt;code&gt;union(R1, R2)&lt;/code&gt;, the relabelling coercion is not invoked. This feels inconsistent, since &lt;code&gt;union(R1, R2)&lt;/code&gt; might be expected to accept anything that &lt;code&gt;R1&lt;/code&gt; accepts.&lt;/p&gt;
&lt;p&gt;Test case FunctionCall-056 (currently failing) illlustrates the problem.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
