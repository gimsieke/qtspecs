<item>
   <title>Issue #31 created</title>
   <pubDate>2020-12-18T12:53:45Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/31</link>
   <guid>https://qt4cg.org/@qt4cg/2020/#created-31</guid>
   <description>&lt;div&gt;&lt;p&gt;Extend FLWOR expressions to maps&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;With the addition of the &lt;code&gt;for member&lt;/code&gt; syntax for arrays, it is possible to use a ForExpr/FLWORExpr to enumerate the contents of sequences and arrays, but not maps. In order to be consistent and symmetric across these types, the &lt;code&gt;for member&lt;/code&gt; syntax should be extended to support maps by enumerating the key/value entries of the map.&lt;/p&gt;
&lt;p&gt;Given a map of type &lt;code&gt;map(K, V)&lt;/code&gt; the member RecordTest would be &lt;code&gt;record(key as K, value as V)&lt;/code&gt;. Given a map of type &lt;code&gt;map(*)&lt;/code&gt;, the member RecordTest would be &lt;code&gt;record(key, value)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This would allow a user to write expressions like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for member $entry in $map
return element { $entry?key } { $entry?value }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; With the addition of the &lt;code&gt;array:values&lt;/code&gt; and &lt;code&gt;map:entries&lt;/code&gt; functions in issue #29, it is possible to avoid the need of the &lt;code&gt;for member&lt;/code&gt; syntax for arrays and maps, but may be worth keeping for people who prefer the wordy style of the XPath/XQuery syntax.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
